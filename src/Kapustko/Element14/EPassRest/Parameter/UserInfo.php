<?php
/**
 * User: kapustko
 * Date: 31.01.2020
 * Time: 18:07
 */

namespace Kapustko\Element14\EPassRest\Parameter;

use Kapustko\Element14\EPassRest\Exception\InvalidParameterException;


class UserInfo
{
    /**
     * UserInfo constructor.
     */
    public function __construct()
    {
    }


    /**
     * This is generated by concatenating the Operation Name (see above table and also see SOAP WSDL) + timestamp  and then using the secret key generate a HMAC SHA1 hash using the resultant Base64 option (useful reference: http://hash.online-convert.com/sha1-generator ).
     * Please note:
     * 1. The signature is operation specific and therefore needs to match the request "term" being made.
     * 2. When a  Signature is created using the HMAC SHA1 process, it may contain special characters which will need to be URL encoded (useful site: http://meyerweb.com/eric/tools/dencoder/)
     * @param $signature
     * @throws InvalidParameterException
     */
    public function validateSignature($signature)
    {
        if (empty($signature)) {
            throw  new InvalidParameterException(sprintf("'%s%' is not a valid api key should be not empty", $signature));
        }
    }

    /**
     * Universal time, referred to as GMT and in the format of yyyy-MM-ddThh:mm:ss.zzz. e.g. 2009-02-0T15:45:40.254. This has a tolerance of + or – 10 minutes in relative to search service system clock
     * @param $timestamp
     * @throws InvalidParameterException
     */
    public function validateTimestamp($timestamp)
    {

        if (empty($timestamp)) {
            throw  new InvalidParameterException(sprintf("'%s%' is not a valid api key should be not empty", $timestamp));
        }
    }

    /**
     * This is a number generated by us and assigned to the customer, e.g. 999123
     * @param $customerId
     * @throws InvalidParameterException
     */
    public function validateCustomerId($customerId)
    {

        if (filter_var($customerId, FILTER_VALIDATE_INT)) {
            throw  new InvalidParameterException(sprintf("'%s%' is not a omit xml schema value, should be a number", $customerId));
        }
    }
}